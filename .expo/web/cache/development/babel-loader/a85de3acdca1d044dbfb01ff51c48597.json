{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { Button } from 'react-native-paper';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport MapView, { Circle, Marker, PROVIDER_GOOGLE } from 'react-native-maps';\nimport * as Permissions from \"expo-permissions\";\nimport * as Location from 'expo-location';\nimport * as ImagePicker from 'expo-image-picker';\nimport { db } from \"../../firebase\";\nimport { ref, set, push, onValue } from 'firebase/database';\nimport { getStorage, ref as storageRef, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { auth } from \"../../firebase\";\n\nvar Emergency = function Emergency() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      lat = _useState2[0],\n      setLat = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lng = _useState4[0],\n      setLng = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      keyPush = _useState6[0],\n      setKeyPush = _useState6[1];\n\n  var _useState7 = useState(auth.currentUser.displayName),\n      _useState8 = _slicedToArray(_useState7, 2),\n      displayName = _useState8[0],\n      setDisplayName = _useState8[1];\n\n  var _useState9 = useState(auth.currentUser.email),\n      _useState10 = _slicedToArray(_useState9, 2),\n      displayEmail = _useState10[0],\n      setDisplayEmail = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      usersAddress = _useState12[0],\n      setUsersAddress = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      nambah = _useState14[0],\n      setNambah = _useState14[1];\n\n  useEffect(function () {\n    var dbRef = ref(db, 'users/');\n    onValue(dbRef, function (snap) {\n      var users = [];\n      snap.forEach(function (item) {\n        var data = item.val();\n\n        if (auth.currentUser.uid == data.id) {\n          users.push(data);\n          console.log(data.address);\n          setUsersAddress(data.address);\n          setNambah(data.phoneNumber);\n        }\n      });\n    });\n  }, []);\n\n  var _upload = function _upload() {\n    var _await$Permissions$as, status, result;\n\n    return _regeneratorRuntime.async(function _upload$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n          case 2:\n            _await$Permissions$as = _context.sent;\n            status = _await$Permissions$as.status;\n\n            if (!(status == 'granted')) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync());\n\n          case 7:\n            result = _context.sent;\n            loadImage(result.uri).then(function () {\n              console.log(result);\n              Alert.alert('Success');\n            }).catch(function (error) {\n              Alert.alert(error);\n            });\n            _context.next = 12;\n            break;\n\n          case 11:\n            Alert.alert(' PLEASE ALLOW CAMERA ACCESS ');\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loadImage = function loadImage(uri) {\n    var metadata, response, blob, name, storage, storRef, uploadTask;\n    return _regeneratorRuntime.async(function loadImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            metadata = {\n              contentType: 'image/jpeg'\n            };\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 3:\n            response = _context2.sent;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 6:\n            blob = _context2.sent;\n            name = new Date().getTime() + '-media.jpg';\n            storage = getStorage();\n            storRef = storageRef(storage, 'images/' + name);\n            uploadTask = uploadBytesResumable(storRef, blob, metadata);\n            uploadTask.on('state_changed', function (snapshot) {\n              var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n              console.log('Upload is ' + progress + '% done');\n\n              switch (snapshot.state) {\n                case 'paused':\n                  console.log('Upload is paused');\n                  break;\n\n                case 'running':\n                  console.log('Upload is running');\n                  break;\n              }\n            }, function (error) {}, function () {\n              getDownloadURL(uploadTask.snapshot.ref).then(function (downloadURL) {\n                console.log('File available at', downloadURL);\n                console.log(nambah);\n                set(ref(db, 'requests/' + auth.currentUser.uid), {\n                  id: auth.currentUser.uid,\n                  username: displayName,\n                  email: displayEmail,\n                  lat: lat,\n                  long: lng,\n                  address: usersAddress,\n                  profile_picture: downloadURL,\n                  phoneNumber: nambah,\n                  status: 'Pending'\n                });\n              });\n            });\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _getLocation = function _getLocation() {\n    var _await$Permissions$as2, status, response, location;\n\n    return _regeneratorRuntime.async(function _getLocation$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.LOCATION));\n\n          case 3:\n            _await$Permissions$as2 = _context3.sent;\n            status = _await$Permissions$as2.status;\n\n            if (!(status != 'granted')) {\n              _context3.next = 10;\n              break;\n            }\n\n            _context3.next = 8;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.LOCATION));\n\n          case 8:\n            response = _context3.sent;\n            console.log('not granted');\n\n          case 10:\n            _context3.next = 12;\n            return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({\n              enableHighAccuracy: true\n            }));\n\n          case 12:\n            location = _context3.sent;\n            setLat(location.coords.latitude);\n            setLng(location.coords.longitude);\n\n            if (location.coords.latitude == lat && location.coords.longitude == lng) {\n              _upload();\n            }\n\n            _context3.next = 21;\n            break;\n\n          case 18:\n            _context3.prev = 18;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log('Error', _context3.t0);\n\n          case 21:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 18]], Promise);\n  };\n\n  var coords = {\n    latitude: lat,\n    longitude: lng\n  };\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Button, {\n    mode: \"contained\",\n    style: styles.button,\n    onPress: _getLocation\n  }, \"Ping Me\"), React.createElement(MapView, {\n    style: styles.map,\n    showsUserLocation: true,\n    initialRegion: {\n      latitude: lat,\n      longitude: lng,\n      latitudeDelta: 0.0922,\n      longitudeDelta: 0.0421\n    },\n    region: {\n      latitude: lat,\n      longitude: lng,\n      latitudeDelta: 0.0922,\n      longitudeDelta: 0.0421\n    }\n  }, React.createElement(Marker, {\n    coordinate: coords\n  }), React.createElement(Circle, {\n    center: coords,\n    radius: 1000,\n    strokeColor: \"#4F6D7A\",\n    strokeWidth: 2\n  }))));\n};\n\nexport default Emergency;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  map: {\n    width: '95%',\n    height: '80%',\n    position: 'relative',\n    bottom: '8%'\n  },\n  button: {\n    width: 170,\n    alignSelf: 'center',\n    position: 'absolute',\n    bottom: '10%',\n    backgroundColor: '#3EB489'\n  }\n});","map":{"version":3,"sources":["C:/Users/Kid/Desktop/care-mob/components/screens/Emergency/index.js"],"names":["React","Component","useState","useEffect","Button","MapView","Circle","Marker","PROVIDER_GOOGLE","Permissions","Location","ImagePicker","db","ref","set","push","onValue","getStorage","storageRef","uploadBytesResumable","getDownloadURL","auth","Emergency","lat","setLat","lng","setLng","keyPush","setKeyPush","currentUser","displayName","setDisplayName","email","displayEmail","setDisplayEmail","usersAddress","setUsersAddress","nambah","setNambah","dbRef","snap","users","forEach","item","data","val","uid","id","console","log","address","phoneNumber","_upload","askAsync","CAMERA","status","launchCameraAsync","result","loadImage","uri","then","Alert","alert","catch","error","metadata","contentType","fetch","response","blob","name","Date","getTime","storage","storRef","uploadTask","on","snapshot","progress","bytesTransferred","totalBytes","state","downloadURL","username","long","profile_picture","_getLocation","LOCATION","getCurrentPositionAsync","enableHighAccuracy","location","coords","latitude","longitude","styles","container","button","map","latitudeDelta","longitudeDelta","StyleSheet","create","flex","alignItems","justifyContent","width","height","position","bottom","alignSelf","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport { Button } from 'react-native-paper';\nimport { StyleSheet, Text, View, Dimensions, Alert } from 'react-native';\nimport MapView, { Circle, Marker, PROVIDER_GOOGLE } from 'react-native-maps';\nimport * as Permissions from \"expo-permissions\";\nimport * as Location from 'expo-location';\nimport * as ImagePicker from 'expo-image-picker';\nimport { db } from '../../firebase';\nimport { ref, set, push, onValue } from 'firebase/database';\nimport { getStorage, ref as storageRef, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { auth } from '../../firebase'\n\n\n\n\nconst Emergency = () => {\n\n    const [lat, setLat] = useState(0)\n    const [lng, setLng] = useState(0)\n    const [keyPush, setKeyPush] = useState(null)\n    const [displayName, setDisplayName] = useState(auth.currentUser.displayName);\n    const [displayEmail, setDisplayEmail] = useState(auth.currentUser.email);\n    const [usersAddress, setUsersAddress] = useState();\n    const [nambah, setNambah] = useState()\n\n    useEffect(() => {\n        const dbRef = ref(db, 'users/');\n        onValue(dbRef, (snap) => {\n                  const users = []\n                  snap.forEach(item => {\n                      const data = item.val()\n                      if(auth.currentUser.uid == data.id){\n                          users.push(data)\n                          console.log(data.address)\n                          setUsersAddress(data.address)\n                          setNambah(data.phoneNumber)\n                      }\n                  })\n                  \n  \n          });\n    }, [])\n\n\n    const _upload = async () => {\n\n        const { status } = await Permissions.askAsync(Permissions.CAMERA);\n\n\n        if (status == 'granted') {\n            let result = await ImagePicker.launchCameraAsync()\n\n            loadImage(result.uri)\n                .then(() => {\n                    console.log(result)\n                    Alert.alert('Success')\n                })\n                .catch((error) => {\n                    Alert.alert(error)\n                })\n        } else {\n            Alert.alert(' PLEASE ALLOW CAMERA ACCESS ')\n        }\n\n    }\n\n    const loadImage = async (uri) => {\n        const metadata = {\n            contentType: 'image/jpeg'\n        };\n        const response = await fetch(uri);\n        const blob = await response.blob();\n\n        const name = new Date().getTime() + '-media.jpg'\n\n        const storage = getStorage();\n        const storRef = storageRef(storage, 'images/' + name);\n\n        const uploadTask = uploadBytesResumable(storRef, blob, metadata);\n        uploadTask.on('state_changed',\n            (snapshot) => {\n                // Observe state change events such as progress, pause, and resume\n                // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n                const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n\n                console.log('Upload is ' + progress + '% done');\n                switch (snapshot.state) {\n                    case 'paused':\n                        console.log('Upload is paused');\n                        break;\n                    case 'running':\n                        console.log('Upload is running');\n                        break;\n                }\n            },\n            (error) => {\n                // Handle unsuccessful uploads\n            },\n            () => {\n                // Handle successful uploads on complete\n                getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n                    console.log('File available at', downloadURL);\n                    console.log(nambah)\n                    set(ref(db, 'requests/' + auth.currentUser.uid), {\n                        id: auth.currentUser.uid,\n                        username: displayName,\n                        email: displayEmail,\n                        lat: lat,\n                        long: lng,\n                        address: usersAddress,\n                        profile_picture: downloadURL,\n                        phoneNumber: nambah,\n                        status: 'Pending'\n                    });\n\n                });\n\n            }\n        );\n    }\n\n\n    const _getLocation = async () => {\n        try {\n\n            const { status } = await Permissions.askAsync(Permissions.LOCATION);\n            if (status != 'granted') {\n                const response = await Permissions.askAsync(Permissions.LOCATION);\n                console.log('not granted')\n            }\n            const location = await Location.getCurrentPositionAsync({ enableHighAccuracy: true })\n\n            setLat(location.coords.latitude)\n            setLng(location.coords.longitude)\n            if (location.coords.latitude == lat && location.coords.longitude == lng) {\n                _upload();\n            }\n\n\n        } catch (error) {\n            console.log('Error', error)\n        }\n    }\n\n\n\n\n    const coords = {\n        latitude: lat,\n        longitude: lng,\n    }\n\n\n    return (\n        <>\n            <View style={styles.container}>\n                <Button mode=\"contained\" style={styles.button} onPress={_getLocation}>Ping Me</Button>\n                <MapView\n                    style={styles.map}\n                    showsUserLocation={true}\n                    initialRegion={{\n                        latitude: lat,\n                        longitude: lng,\n                        latitudeDelta: 0.0922,\n                        longitudeDelta: 0.0421,\n                    }}\n                    region={{\n                        latitude: lat,\n                        longitude: lng,\n                        latitudeDelta: 0.0922,\n                        longitudeDelta: 0.0421,\n                    }}\n                >\n                    <Marker coordinate={coords} />\n                    <Circle center={coords}\n                        radius={1000}\n                        strokeColor=\"#4F6D7A\"\n                        strokeWidth={2} />\n                </MapView>\n\n            </View>\n        </>\n    )\n}\n\n\nexport default Emergency;\n\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    map: {\n        width:  '95%',\n        height: '80%',\n        position: 'relative',\n        bottom: '8%'\n    },\n    button: {\n        width: 170,\n        alignSelf: 'center',\n        position: 'absolute',\n        bottom: '10%',\n        backgroundColor: '#3EB489'\n\n    }\n});\n\n// Dimensions.get('window').width"]},"metadata":{},"sourceType":"module"}