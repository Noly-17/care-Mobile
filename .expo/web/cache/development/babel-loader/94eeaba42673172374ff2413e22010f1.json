{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { TextInput, Button } from 'react-native-paper';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../../firebase\";\nimport { getDatabase, ref, child, get } from \"firebase/database\";\nimport Cache from \"../../Cache\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { findEmailAsync, getFromAsyncStorage, findPasswordAsync, storeInAsyncStorage } from \"../../storage\";\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sers = _useState6[0],\n      setUsers = _useState6[1];\n\n  useEffect(function () {\n    getFromAsyncStorage(\"email\").then(function (val) {\n      return console.log(val);\n    });\n\n    try {\n      signInWithEmailAndPassword(auth, email, password).then(function (user) {\n        storeInAsyncStorage(\"email\", email);\n        storeInAsyncStorage(\"password\", password);\n        console.log(' user logged in');\n        navigation.push('Home');\n      });\n    } catch (_unused) {\n      console.log('Failed to Login');\n    }\n\n    var dbRef = ref(getDatabase());\n    get(child(dbRef, \"users/\")).then(function (snapshot) {\n      var users = [];\n      snapshot.forEach(function (item) {\n        var data = item.val();\n        users.push(data);\n      });\n      setUsers(users);\n      console.log(sers);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }, []);\n\n  var handleSubmit = function handleSubmit() {\n    try {\n      signInWithEmailAndPassword(auth, email, password).then(function (user) {\n        storeInAsyncStorage(\"email\", email);\n        storeInAsyncStorage(\"password\", password);\n        console.log(' user logged in');\n        navigation.push('Home');\n      });\n    } catch (_unused2) {\n      console.log('Failed to Login');\n    }\n  };\n\n  var signUpRedirect = function signUpRedirect() {\n    navigation.push('Signup');\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center'\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '85%',\n      alignSelf: 'center'\n    }\n  }, React.createElement(Cache, {\n    uri: \"https://liquipedia.net/commons/images/b/b9/Is_GG_logo_v2.png\"\n  }), React.createElement(Image, {\n    source: require(\"../../../assets/logo.png\"),\n    style: {\n      width: 150,\n      height: 150,\n      alignSelf: 'center'\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 100,\n      justifyContent: 'center'\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 25,\n      fontWeight: 'bold',\n      alignSelf: 'center',\n      marginBottom: 30\n    }\n  }, \"WELCOME\")), React.createElement(TextInput, {\n    label: \"Email\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      setEmail(text);\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      marginTop: 10\n    },\n    label: \"Password\",\n    value: password,\n    onChangeText: function onChangeText(text) {\n      setPassword(text);\n    },\n    secureTextEntry: true\n  }), React.createElement(Button, {\n    style: {\n      marginTop: 20,\n      backgroundColor: '#3EB489'\n    },\n    mode: \"contained\",\n    onPress: handleSubmit\n  }, \"Login\"), React.createElement(Button, {\n    style: {\n      marginTop: 20\n    },\n    onPress: signUpRedirect\n  }, \"Register\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Kid/Desktop/care-mob/components/screens/Login/index.js"],"names":["React","useState","useEffect","TextInput","Button","signInWithEmailAndPassword","auth","getDatabase","ref","child","get","Cache","AsyncStorage","findEmailAsync","getFromAsyncStorage","findPasswordAsync","storeInAsyncStorage","Login","navigation","email","setEmail","password","setPassword","sers","setUsers","then","val","console","log","user","push","dbRef","snapshot","users","forEach","item","data","catch","error","handleSubmit","signUpRedirect","flex","justifyContent","width","alignSelf","require","height","fontSize","fontWeight","marginBottom","text","marginTop","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextInput, Button } from 'react-native-paper';\nimport { View, Text, Image } from 'react-native';\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from '../../firebase'\nimport { getDatabase, ref, child, get } from \"firebase/database\";\nimport Cache from '../../Cache';\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport {findEmailAsync, getFromAsyncStorage, findPasswordAsync, storeInAsyncStorage} from '../../storage'\n\n\nconst Login = ({ navigation }) => {\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [sers, setUsers] = useState([])\n\n    useEffect(() => {\n        // findEmailAsync(setEmail);\n        // findPasswordAsync(setPassword);\n\n        getFromAsyncStorage(\"email\").then(val => console.log(val));\n\n        try {\n            signInWithEmailAndPassword(auth, email, password)\n                .then((user) => {\n                    storeInAsyncStorage(\"email\", email)\n                    storeInAsyncStorage(\"password\", password)\n                    console.log(' user logged in')\n                    navigation.push('Home')\n                })\n\n        } catch {\n            console.log('Failed to Login')\n        }\n\n\n\n\n        const dbRef = ref(getDatabase());\n        get(child(dbRef, `users/`))\n            .then((snapshot) => {\n                const users = []\n                snapshot.forEach(item => {\n                    const data = item.val()\n                    users.push(data)\n                })\n                setUsers(users)\n                console.log(sers)\n\n            }).catch((error) => {\n                console.error(error);\n            });\n\n\n    }, [])\n\n\n    const handleSubmit = () => {\n\n        try {\n\n\n            signInWithEmailAndPassword(auth, email, password)\n                .then((user) => {\n                    storeInAsyncStorage(\"email\", email)\n                    storeInAsyncStorage(\"password\", password)\n                    console.log(' user logged in')\n                    navigation.push('Home')\n\n\n                })\n\n        } catch {\n            console.log('Failed to Login')\n        }\n    }\n\n    const signUpRedirect = () => {\n        navigation.push('Signup')\n\n    }\n\n    return (\n        <View style={{ flex: 1, justifyContent: 'center',  }}>\n            <View style={{ width: '85%', alignSelf: 'center' }}>\n            <Cache uri='https://liquipedia.net/commons/images/b/b9/Is_GG_logo_v2.png'/>\n            <Image source={require('../../../assets/logo.png')} style={{ width: 150, height: 150, alignSelf: 'center'}}/>\n\n                <View\n                    style={{ height: 100, justifyContent: 'center' }}\n                >\n                    <Text\n                        style={{ fontSize: 25, fontWeight: 'bold', alignSelf: 'center', marginBottom: 30, }}\n                    >\n                        WELCOME\n                    </Text>\n                </View>\n                <TextInput\n                    label=\"Email\"\n                    value={email}\n                    onChangeText={text => {setEmail(text)}\n                    }\n                />\n                <TextInput\n                    style={{ marginTop: 10 }}\n                    label=\"Password\"\n                    value={password}\n                    onChangeText={text => {setPassword(text)\n                    }}\n                    secureTextEntry\n                />\n                <Button style={{ marginTop: 20, backgroundColor: '#3EB489' }} mode=\"contained\" onPress={handleSubmit}>\n                    Login\n                </Button>\n                <Button style={{ marginTop: 20 }} onPress={signUpRedirect}>\n                    Register\n                </Button>\n\n            </View>\n        </View>\n    );\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}