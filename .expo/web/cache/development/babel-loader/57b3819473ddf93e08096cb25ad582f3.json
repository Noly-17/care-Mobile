{"ast":null,"code":"import AsyncStorage from \"@react-native-async-storage/async-storage\";\nexport var getFromAsyncStorage = function getFromAsyncStorage(key, setEmail) {\n  return AsyncStorage.getItem(key).then(function (value) {\n    return setEmail(value);\n  }).catch(function (error) {\n    return console.log(error);\n  });\n};\nexport var findPasswordAsync = function findPasswordAsync(setPassword) {\n  AsyncStorage.getItem('password').then(function (value) {\n    return setPassword(value);\n  }).catch(function (error) {\n    return console.log(error);\n  });\n};\nexport var storeInAsyncStorage = function storeInAsyncStorage(key, value) {\n  AsyncStorage.setItem(key, value);\n};","map":{"version":3,"sources":["C:/Users/Kid/Desktop/care-mob/components/storage/index.tsx"],"names":["AsyncStorage","getFromAsyncStorage","key","setEmail","getItem","then","value","catch","error","console","log","findPasswordAsync","setPassword","storeInAsyncStorage","setItem"],"mappings":"AAAA,OAAQA,YAAR,MAA0B,2CAA1B;AAEA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,GAAD,EAAcC,QAAd,EAAgC;AAChE,SAAOH,YAAY,CAACI,OAAb,CAAqBF,GAArB,EACLG,IADK,CACA,UAACC,KAAD;AAAA,WAAUH,QAAQ,CAACG,KAAD,CAAlB;AAAA,GADA,EAELC,KAFK,CAEC,UAACC,KAAD;AAAA,WAAUC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAV;AAAA,GAFD,CAAP;AAGF,CAJM;AAMP,OAAO,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,WAAD,EAAsB;AACnDZ,EAAAA,YAAY,CAACI,OAAb,CAAqB,UAArB,EACCC,IADD,CACM,UAACC,KAAD;AAAA,WAAUM,WAAW,CAACN,KAAD,CAArB;AAAA,GADN,EAECC,KAFD,CAEO,UAACC,KAAD;AAAA,WAAUC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAV;AAAA,GAFP;AAGH,CAJM;AAMP,OAAO,IAAMK,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACX,GAAD,EAAcI,KAAd,EAA6B;AAC5DN,EAAAA,YAAY,CAACc,OAAb,CAAqBZ,GAArB,EAA0BI,KAA1B;AACH,CAFM","sourcesContent":["import  AsyncStorage from \"@react-native-async-storage/async-storage\"\r\n\r\nexport const getFromAsyncStorage = (key: string, setEmail: any) => {\r\n   return AsyncStorage.getItem(key)\r\n    .then((value)=> setEmail(value))\r\n    .catch((error)=> console.log(error))\r\n}\r\n\r\nexport const findPasswordAsync = (setPassword: any) => {\r\n    AsyncStorage.getItem('password')\r\n    .then((value)=> setPassword(value))\r\n    .catch((error)=> console.log(error))\r\n}\r\n\r\nexport const storeInAsyncStorage = (key: string, value: any) => {\r\n    AsyncStorage.setItem(key, value)\r\n}"]},"metadata":{},"sourceType":"module"}