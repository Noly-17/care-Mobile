{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNativeMaps = require(\"react-native-maps\");\n\nvar _utils = require(\"./utils\");\n\nvar _jsxFileName = \"/Users/codea/wootsbot-dev/react-native-polyline-direction/src/polyline-direction.js\";\n\nfunction PolylineDirection(props) {\n  var apiKey = props.apiKey,\n      _props$apiDirectionsS = props.apiDirectionsServiceURL,\n      apiDirectionsServiceURL = _props$apiDirectionsS === void 0 ? 'https://maps.googleapis.com/maps/api/directions/json' : _props$apiDirectionsS,\n      _props$language = props.language,\n      language = _props$language === void 0 ? 'en' : _props$language,\n      _props$mode = props.mode,\n      mode = _props$mode === void 0 ? 'driving' : _props$mode,\n      optimizeWaypoints = props.optimizeWaypoints,\n      region = props.region,\n      origin = props.origin,\n      destination = props.destination,\n      waypoints = props.waypoints,\n      onReady = props.onReady,\n      onStart = props.onStart,\n      onError = props.onError;\n\n  var _useState = (0, _react.useState)(null),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      coordinates = _useState2[0],\n      setCoordinates = _useState2[1];\n\n  (0, _react.useEffect)(function () {\n    handleFetchAndRenderRoute();\n    return function () {\n      setCoordinates(null);\n    };\n  }, [handleFetchAndRenderRoute, props]);\n  var handleReady = (0, _react.useCallback)(function (result) {\n    if (!onReady) {\n      return null;\n    }\n\n    onReady({\n      coordinates: result.coordinates,\n      distance: result.distance,\n      duration: result.duration\n    });\n  }, [onReady]);\n  var handleStart = (0, _react.useCallback)(function (_ref) {\n    var originStart = _ref.originStart,\n        destinationStart = _ref.destinationStart,\n        waypointsStart = _ref.waypointsStart;\n\n    if (!onStart) {\n      return null;\n    }\n\n    onStart({\n      origin: originStart,\n      destination: destinationStart,\n      waypoints: waypointsStart\n    });\n  }, [onStart]);\n  var handleError = (0, _react.useCallback)(function (errorMessage) {\n    if (!onError) {\n      return null;\n    }\n\n    onError(errorMessage);\n  }, [onError]);\n  var handleFetchAndRenderRoute = (0, _react.useCallback)(function () {\n    var originString = origin;\n    var destinationString = destination;\n    var wayPointsString = waypoints;\n\n    if (!originString || !destinationString) {\n      return;\n    }\n\n    if (originString.latitude && originString.longitude) {\n      originString = originString.latitude + \",\" + originString.longitude;\n    }\n\n    if (destinationString.latitude && destinationString.longitude) {\n      destinationString = destinationString.latitude + \",\" + destinationString.longitude;\n    }\n\n    if (!wayPointsString || !wayPointsString.length) {\n      wayPointsString = '';\n    } else {\n      wayPointsString = wayPointsString.map(function (waypoint) {\n        return waypoint.latitude && waypoint.longitude ? waypoint.latitude + \",\" + waypoint.longitude : waypoint;\n      }).join('|');\n    }\n\n    if (optimizeWaypoints) {\n      wayPointsString = \"optimize:true|\" + wayPointsString;\n    }\n\n    handleStart({\n      originStart: originString,\n      destinationStart: destinationString,\n      waypointsStart: wayPointsString ? wayPointsString.split('|') : []\n    });\n    (0, _utils.getDirectionsRequest)(apiKey, apiDirectionsServiceURL, originString, wayPointsString, destinationString, mode, language, region).then(function (result) {\n      setCoordinates(result.coordinates);\n      handleReady(result);\n    }).catch(function (errorMessage) {\n      console.warn(\"PolylineDirection Error: \" + errorMessage);\n      handleError(errorMessage);\n    });\n  }, [apiKey, apiDirectionsServiceURL, language, mode, optimizeWaypoints, region, origin, destination, waypoints, handleReady, handleStart, handleError]);\n\n  if (!coordinates) {\n    return null;\n  }\n\n  return _react.default.createElement(_reactNativeMaps.Polyline, (0, _extends2.default)({\n    coordinates: coordinates\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    }\n  }));\n}\n\nPolylineDirection.propTypes = {\n  apiKey: _propTypes.default.string.isRequired,\n  origin: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({\n    latitude: _propTypes.default.number.isRequired,\n    longitude: _propTypes.default.number.isRequired\n  })]),\n  waypoints: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({\n    latitude: _propTypes.default.number.isRequired,\n    longitude: _propTypes.default.number.isRequired\n  })])),\n  destination: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({\n    latitude: _propTypes.default.number.isRequired,\n    longitude: _propTypes.default.number.isRequired\n  })]),\n  mode: _propTypes.default.oneOf(['driving', 'bicycling', 'transit', 'walking']),\n  onStart: _propTypes.default.func,\n  onReady: _propTypes.default.func,\n  onError: _propTypes.default.func,\n  language: _propTypes.default.string,\n  resetOnChange: _propTypes.default.bool,\n  optimizeWaypoints: _propTypes.default.bool,\n  apiDirectionsServiceURL: _propTypes.default.string,\n  region: _propTypes.default.string\n};\nvar _default = PolylineDirection;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Kid/Desktop/care-mob/node_modules/@react-native-maps/polyline-direction/lib/polyline-direction.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","_extends2","_slicedToArray2","_react","_propTypes","_reactNativeMaps","_utils","_jsxFileName","PolylineDirection","props","apiKey","_props$apiDirectionsS","apiDirectionsServiceURL","_props$language","language","_props$mode","mode","optimizeWaypoints","region","origin","destination","waypoints","onReady","onStart","onError","_useState","useState","_useState2","coordinates","setCoordinates","useEffect","handleFetchAndRenderRoute","handleReady","useCallback","result","distance","duration","handleStart","_ref","originStart","destinationStart","waypointsStart","handleError","errorMessage","originString","destinationString","wayPointsString","latitude","longitude","length","map","waypoint","join","split","getDirectionsRequest","then","catch","console","warn","createElement","Polyline","__source","fileName","lineNumber","propTypes","string","isRequired","oneOfType","shape","number","arrayOf","oneOf","func","resetOnChange","bool","_default"],"mappings":"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","sourcesContent":["var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _react=_interopRequireWildcard(require(\"react\"));var _propTypes=_interopRequireDefault(require(\"prop-types\"));var _reactNativeMaps=require(\"react-native-maps\");var _utils=require(\"./utils\");var _jsxFileName=\"/Users/codea/wootsbot-dev/react-native-polyline-direction/src/polyline-direction.js\";function PolylineDirection(props){var apiKey=props.apiKey,_props$apiDirectionsS=props.apiDirectionsServiceURL,apiDirectionsServiceURL=_props$apiDirectionsS===void 0?'https://maps.googleapis.com/maps/api/directions/json':_props$apiDirectionsS,_props$language=props.language,language=_props$language===void 0?'en':_props$language,_props$mode=props.mode,mode=_props$mode===void 0?'driving':_props$mode,optimizeWaypoints=props.optimizeWaypoints,region=props.region,origin=props.origin,destination=props.destination,waypoints=props.waypoints,onReady=props.onReady,onStart=props.onStart,onError=props.onError;var _useState=(0,_react.useState)(null),_useState2=(0,_slicedToArray2.default)(_useState,2),coordinates=_useState2[0],setCoordinates=_useState2[1];(0,_react.useEffect)(function(){handleFetchAndRenderRoute();return function(){setCoordinates(null);};},[handleFetchAndRenderRoute,props]);var handleReady=(0,_react.useCallback)(function(result){if(!onReady){return null;}onReady({coordinates:result.coordinates,distance:result.distance,duration:result.duration});},[onReady]);var handleStart=(0,_react.useCallback)(function(_ref){var originStart=_ref.originStart,destinationStart=_ref.destinationStart,waypointsStart=_ref.waypointsStart;if(!onStart){return null;}onStart({origin:originStart,destination:destinationStart,waypoints:waypointsStart});},[onStart]);var handleError=(0,_react.useCallback)(function(errorMessage){if(!onError){return null;}onError(errorMessage);},[onError]);var handleFetchAndRenderRoute=(0,_react.useCallback)(function(){var originString=origin;var destinationString=destination;var wayPointsString=waypoints;if(!originString||!destinationString){return;}if(originString.latitude&&originString.longitude){originString=originString.latitude+\",\"+originString.longitude;}if(destinationString.latitude&&destinationString.longitude){destinationString=destinationString.latitude+\",\"+destinationString.longitude;}if(!wayPointsString||!wayPointsString.length){wayPointsString='';}else{wayPointsString=wayPointsString.map(function(waypoint){return waypoint.latitude&&waypoint.longitude?waypoint.latitude+\",\"+waypoint.longitude:waypoint;}).join('|');}if(optimizeWaypoints){wayPointsString=\"optimize:true|\"+wayPointsString;}handleStart({originStart:originString,destinationStart:destinationString,waypointsStart:wayPointsString?wayPointsString.split('|'):[]});(0,_utils.getDirectionsRequest)(apiKey,apiDirectionsServiceURL,originString,wayPointsString,destinationString,mode,language,region).then(function(result){setCoordinates(result.coordinates);handleReady(result);}).catch(function(errorMessage){console.warn(\"PolylineDirection Error: \"+errorMessage);handleError(errorMessage);});},[apiKey,apiDirectionsServiceURL,language,mode,optimizeWaypoints,region,origin,destination,waypoints,handleReady,handleStart,handleError]);if(!coordinates){return null;}return _react.default.createElement(_reactNativeMaps.Polyline,(0,_extends2.default)({coordinates:coordinates},props,{__source:{fileName:_jsxFileName,lineNumber:150}}));}PolylineDirection.propTypes={apiKey:_propTypes.default.string.isRequired,origin:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.shape({latitude:_propTypes.default.number.isRequired,longitude:_propTypes.default.number.isRequired})]),waypoints:_propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.shape({latitude:_propTypes.default.number.isRequired,longitude:_propTypes.default.number.isRequired})])),destination:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.shape({latitude:_propTypes.default.number.isRequired,longitude:_propTypes.default.number.isRequired})]),mode:_propTypes.default.oneOf(['driving','bicycling','transit','walking']),onStart:_propTypes.default.func,onReady:_propTypes.default.func,onError:_propTypes.default.func,language:_propTypes.default.string,resetOnChange:_propTypes.default.bool,optimizeWaypoints:_propTypes.default.bool,apiDirectionsServiceURL:_propTypes.default.string,region:_propTypes.default.string};var _default=PolylineDirection;exports.default=_default;"]},"metadata":{},"sourceType":"script"}