{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport { TextInput, Button } from 'react-native-paper';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { auth, db } from \"../../firebase\";\nimport { ref, set, push } from 'firebase/database';\nimport { updateProfile } from \"firebase/auth\";\nimport * as Permissions from \"expo-permissions\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { getStorage, ref as storageRef, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport SelectDropdown from 'react-native-select-dropdown';\nimport PaperSelect from 'react-native-paper-select';\nimport { Picker } from \"@react-native-picker/picker\";\n\nvar SignUp = function SignUp(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      phoneNumber = _useState4[0],\n      setPhoneNumber = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      address = _useState6[0],\n      setAddress = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      confirmPassword = _useState10[0],\n      setConfirmPassword = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isShow = _useState12[0],\n      setIsShow = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      imagePath = _useState14[0],\n      setImagePath = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      downloadImage = _useState16[0],\n      setDownloadImage = _useState16[1];\n\n  var _useState17 = useState(),\n      _useState18 = _slicedToArray(_useState17, 2),\n      handleVerify = _useState18[0],\n      setHandleVerify = _useState18[1];\n\n  var _useState19 = useState(),\n      _useState20 = _slicedToArray(_useState19, 2),\n      firstName = _useState20[0],\n      setFirstName = _useState20[1];\n\n  var _useState21 = useState(),\n      _useState22 = _slicedToArray(_useState21, 2),\n      middleName = _useState22[0],\n      setMiddleName = _useState22[1];\n\n  var _useState23 = useState(),\n      _useState24 = _slicedToArray(_useState23, 2),\n      lastName = _useState24[0],\n      setLastName = _useState24[1];\n\n  var _useState25 = useState(),\n      _useState26 = _slicedToArray(_useState25, 2),\n      province = _useState26[0],\n      setProvince = _useState26[1];\n\n  var _useState27 = useState(),\n      _useState28 = _slicedToArray(_useState27, 2),\n      city = _useState28[0],\n      setCity = _useState28[1];\n\n  var _useState29 = useState(),\n      _useState30 = _slicedToArray(_useState29, 2),\n      barangay = _useState30[0],\n      setBarangay = _useState30[1];\n\n  var fullName = \"\" + firstName + \" \" + (\"\" + middleName) + \" \" + (\"\" + lastName);\n  var signUpAddress = \"\" + barangay + \", \" + (\"\" + city) + \", \" + (\"\" + province);\n  console.log(signUpAddress);\n\n  var navigateLogin = function navigateLogin() {\n    navigation.navigate('Login');\n  };\n\n  var _upload = function _upload() {\n    var _await$Permissions$as, status, result;\n\n    return _regeneratorRuntime.async(function _upload$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n          case 2:\n            _await$Permissions$as = _context.sent;\n            status = _await$Permissions$as.status;\n\n            if (!(status == 'granted')) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync());\n\n          case 7:\n            result = _context.sent;\n            loadImage(result.uri).then(function () {\n              console.log(result);\n              Alert.alert('Success');\n              setImagePath(result.uri);\n            }).catch(function (error) {\n              Alert.alert(error);\n            });\n            _context.next = 12;\n            break;\n\n          case 11:\n            Alert.alert(' PLEASE ALLOW CAMERA ACCESS ');\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loadImage = function loadImage(uri) {\n    var metadata, response, blob, name, storage, storRef, uploadTask;\n    return _regeneratorRuntime.async(function loadImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            metadata = {\n              contentType: 'image/jpeg'\n            };\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 3:\n            response = _context2.sent;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 6:\n            blob = _context2.sent;\n            name = new Date().getTime() + '-media.jpg';\n            storage = getStorage();\n            storRef = storageRef(storage, 'displayPhoto/' + name);\n            uploadTask = uploadBytesResumable(storRef, blob, metadata);\n            uploadTask.on('state_changed', function (snapshot) {\n              var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n              console.log('Upload is ' + progress + '% done');\n\n              switch (snapshot.state) {\n                case 'paused':\n                  console.log('Upload is paused');\n                  break;\n\n                case 'running':\n                  console.log('Upload is running');\n                  break;\n              }\n            }, function (error) {\n              console.log(error);\n            }, function () {\n              getDownloadURL(uploadTask.snapshot.ref).then(function (downloadURL) {\n                console.log('File available at', downloadURL);\n                setDownloadImage(downloadURL);\n              });\n            });\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleVerification = function handleVerification() {\n    var _await$Permissions$as2, status, result;\n\n    return _regeneratorRuntime.async(function handleVerification$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n          case 2:\n            _await$Permissions$as2 = _context3.sent;\n            status = _await$Permissions$as2.status;\n\n            if (!(status == 'granted')) {\n              _context3.next = 11;\n              break;\n            }\n\n            _context3.next = 7;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync());\n\n          case 7:\n            result = _context3.sent;\n\n            _verify(result.uri).then(function () {\n              console.log(result);\n              Alert.alert('Success');\n            }).catch(function (error) {\n              Alert.alert(error);\n            });\n\n            _context3.next = 12;\n            break;\n\n          case 11:\n            Alert.alert(' PLEASE ALLOW CAMERA ACCESS ');\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _verify = function _verify(uri) {\n    var metadata, response, blob, name, storage, storRef, uploadTask;\n    return _regeneratorRuntime.async(function _verify$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            metadata = {\n              contentType: 'image/jpeg'\n            };\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 3:\n            response = _context4.sent;\n            _context4.next = 6;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 6:\n            blob = _context4.sent;\n            name = new Date().getTime() + '-media.jpg';\n            storage = getStorage();\n            storRef = storageRef(storage, 'verifyPhoto/' + name);\n            uploadTask = uploadBytesResumable(storRef, blob, metadata);\n            uploadTask.on('state_changed', function (snapshot) {\n              var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n              console.log('Upload is ' + progress + '% done');\n\n              switch (snapshot.state) {\n                case 'paused':\n                  console.log('Upload is paused');\n                  break;\n\n                case 'running':\n                  console.log('Upload is running');\n                  break;\n              }\n            }, function (error) {\n              console.log(error);\n            }, function () {\n              getDownloadURL(uploadTask.snapshot.ref).then(function (downloadURL) {\n                console.log('File available at', downloadURL);\n                setHandleVerify(downloadURL);\n              });\n            });\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleSubmit = function handleSubmit() {\n    try {\n      createUserWithEmailAndPassword(auth, email, password).then(function (user) {\n        var cred = user.user;\n        console.log(cred);\n        updateProfile(auth.currentUser, {\n          displayName: fullName,\n          phoneNumber: phoneNumber,\n          photoURL: downloadImage\n        }).then(function () {\n          set(ref(db, 'users/' + cred.uid), {\n            id: cred.uid,\n            fullname: cred.displayName,\n            email: cred.email,\n            phoneNumber: phoneNumber,\n            address: signUpAddress,\n            verify_photo: handleVerify,\n            display_picture: cred.photoURL,\n            adminRole: false,\n            verified: false\n          });\n          console.log(cred.photoURL);\n          Alert.alert('Success');\n          navigation.navigate('Login');\n        });\n      });\n    } catch (_unused) {\n      console.log('Failed to Signup');\n    }\n  };\n\n  var Prov = [\"Pampanga\"];\n  var Cit = [\"Minalin\"];\n  var Bar = [\"San Isidro\", \"Sta. Rita\", \"Lourdes\", \"Sta. Maria\"];\n\n  var _useState31 = useState('Unknown'),\n      _useState32 = _slicedToArray(_useState31, 2),\n      country = _useState32[0],\n      setCountry = _useState32[1];\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center'\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '85%',\n      alignSelf: 'center'\n    }\n  }, React.createElement(View, {\n    style: {\n      height: 100,\n      justifyContent: 'center'\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 25,\n      fontWeight: '600',\n      alignSelf: 'center',\n      marginBottom: 5\n    }\n  }, \"Sign Up\")), !isShow ? React.createElement(View, null, React.createElement(TouchableOpacity, {\n    onPress: _upload\n  }, imagePath == null ? React.createElement(Image, {\n    source: {\n      uri: 'https://cdn1.iconfinder.com/data/icons/rounded-black-basic-ui/139/Photo_Add-RoundedBlack-512.png'\n    },\n    style: {\n      width: 210,\n      height: 200,\n      alignSelf: 'center',\n      borderRadius: 150\n    }\n  }) : React.createElement(Image, {\n    source: {\n      uri: imagePath\n    },\n    style: {\n      width: 210,\n      height: 200,\n      alignSelf: 'center',\n      borderRadius: 150\n    }\n  })), React.createElement(Button, {\n    style: {\n      marginBottom: 20\n    },\n    onPress: handleVerification\n  }, \"Verify\"), React.createElement(TextInput, {\n    style: {\n      marginTop: 6\n    },\n    label: \"Email\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      marginTop: 6\n    },\n    label: \"Password\",\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    secureTextEntry: true\n  }), React.createElement(TextInput, {\n    style: {\n      marginTop: 6\n    },\n    label: \"Confirm Password\",\n    value: confirmPassword,\n    onChangeText: function onChangeText(text) {\n      return setConfirmPassword(text);\n    },\n    secureTextEntry: true\n  }), React.createElement(Button, {\n    style: {\n      marginTop: 20,\n      backgroundColor: '#3EB489'\n    },\n    mode: \"contained\",\n    onPress: function onPress() {\n      if (email !== null && password !== null && confirmPassword !== null) {\n        if (password === confirmPassword) {\n          setIsShow(true);\n        } else {\n          Alert.alert('Password do not match');\n        }\n      }\n    }\n  }, \"Next\"), React.createElement(Button, {\n    style: {\n      marginTop: 20\n    },\n    mode: \"outlined\",\n    onPress: navigateLogin\n  }, \"Login\")) : null, isShow ? React.createElement(View, null, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: '#333',\n      marginBottom: 7\n    }\n  }, React.createElement(TextInput, {\n    label: \"First Name\",\n    value: firstName,\n    onChangeText: function onChangeText(text) {\n      return setFirstName(text);\n    },\n    style: {\n      width: '50%',\n      marginRight: 6\n    }\n  }), React.createElement(TextInput, {\n    label: \"Middle Name\",\n    value: middleName,\n    onChangeText: function onChangeText(text) {\n      return setMiddleName(text);\n    },\n    style: {\n      width: '50%'\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: '#333'\n    }\n  }, React.createElement(TextInput, {\n    label: \"Last Name\",\n    value: lastName,\n    onChangeText: function onChangeText(text) {\n      return setLastName(text);\n    },\n    style: {\n      width: '100%'\n    }\n  })), React.createElement(TextInput, {\n    style: {\n      marginTop: 6\n    },\n    label: \"Phone Number\",\n    value: phoneNumber,\n    onChangeText: function onChangeText(text) {\n      return setPhoneNumber(text);\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: '#333'\n    }\n  }, React.createElement(SelectDropdown, {\n    defaultButtonText: 'Province',\n    buttonStyle: {\n      backgroundColor: '#e7e7e7',\n      width: '50%',\n      margin: 2\n    },\n    data: Prov,\n    onSelect: function onSelect(selectedItem) {\n      console.log(selectedItem);\n      setProvince(selectedItem);\n    }\n  }), React.createElement(Picker, null), React.createElement(SelectDropdown, {\n    defaultButtonText: 'City',\n    buttonStyle: {\n      backgroundColor: '#e7e7e7',\n      width: '50%',\n      margin: 8\n    },\n    data: Cit,\n    dropdownIconPosition: 'right',\n    onSelect: function onSelect(selectedItem) {\n      console.log(selectedItem);\n      setCity(selectedItem);\n    }\n  }), React.createElement(Picker, null)), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: '#333'\n    }\n  }, React.createElement(SelectDropdown, {\n    defaultButtonText: 'Barangay',\n    buttonStyle: {\n      backgroundColor: '#e7e7e7',\n      width: '100%'\n    },\n    data: Bar,\n    onSelect: function onSelect(selectedItem) {\n      console.log(selectedItem);\n      setBarangay(selectedItem);\n    }\n  }), React.createElement(Picker, null)), React.createElement(Button, {\n    style: {\n      marginTop: 20,\n      backgroundColor: '#3EB489'\n    },\n    mode: \"contained\",\n    onPress: handleSubmit\n  }, \"SignUp\"), React.createElement(Button, {\n    style: {\n      marginTop: 20\n    },\n    mode: \"outlined\",\n    onPress: function onPress() {\n      return setIsShow(false);\n    }\n  }, \"Back\")) : null));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["C:/Users/Kid/Desktop/care-mob/components/screens/Register/index.js"],"names":["React","useState","TextInput","Button","createUserWithEmailAndPassword","auth","db","ref","set","push","updateProfile","Permissions","ImagePicker","getStorage","storageRef","uploadBytesResumable","getDownloadURL","SelectDropdown","PaperSelect","Picker","SignUp","navigation","email","setEmail","phoneNumber","setPhoneNumber","address","setAddress","password","setPassword","confirmPassword","setConfirmPassword","isShow","setIsShow","imagePath","setImagePath","downloadImage","setDownloadImage","handleVerify","setHandleVerify","firstName","setFirstName","middleName","setMiddleName","lastName","setLastName","province","setProvince","city","setCity","barangay","setBarangay","fullName","signUpAddress","console","log","navigateLogin","navigate","_upload","askAsync","CAMERA","status","launchImageLibraryAsync","result","loadImage","uri","then","Alert","alert","catch","error","metadata","contentType","fetch","response","blob","name","Date","getTime","storage","storRef","uploadTask","on","snapshot","progress","bytesTransferred","totalBytes","state","downloadURL","handleVerification","launchCameraAsync","_verify","handleSubmit","user","cred","currentUser","displayName","photoURL","uid","id","fullname","verify_photo","display_picture","adminRole","verified","Prov","Cit","Bar","country","setCountry","flex","justifyContent","width","alignSelf","height","fontSize","fontWeight","marginBottom","borderRadius","marginTop","text","backgroundColor","flexDirection","alignItems","color","marginRight","margin","selectedItem"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { TextInput, Button } from 'react-native-paper';\nimport { View, Text, StyleSheet, Alert, Image, TouchableOpacity } from 'react-native';\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { auth, db } from '../../firebase'\nimport { ref, set, push } from 'firebase/database';\nimport { updateProfile } from \"firebase/auth\";\nimport * as Permissions from \"expo-permissions\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { getStorage, ref as storageRef, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport SelectDropdown from 'react-native-select-dropdown'\nimport PaperSelect from 'react-native-paper-select';\nimport { Picker } from \"@react-native-picker/picker\";\n\n\n\n\n\n\n\nconst SignUp = ({ navigation }) => {\n    const [email, setEmail] = useState(null);\n    const [phoneNumber, setPhoneNumber] = useState();\n    const [address, setAddress] = useState();\n    const [password, setPassword] = useState(null);\n    const [confirmPassword, setConfirmPassword] = useState(null);\n    const [isShow, setIsShow] = useState(false)\n    const [imagePath, setImagePath] = useState(null)\n    const [downloadImage, setDownloadImage] = useState()\n    const [handleVerify, setHandleVerify] = useState()\n\n    /// Input Name\n    const [firstName, setFirstName] = useState();\n    const [middleName, setMiddleName] = useState();\n    const [lastName, setLastName] = useState();\n\n    /// Input address\n    const [province, setProvince] = useState()\n    const [city, setCity] = useState()\n    const [barangay, setBarangay] = useState()\n\n    const fullName = `${firstName}`+ \" \" +`${middleName}`+ \" \"+`${lastName}`\n    const signUpAddress = `${barangay}`+ \", \" +`${city}`+ \", \" + `${province}` \n    console.log(signUpAddress)\n\n    const navigateLogin = () => {\n        navigation.navigate('Login')\n\n    }\n\n\n\n    const _upload = async () => {\n\n        const { status } = await Permissions.askAsync(Permissions.CAMERA);\n\n\n        if (status == 'granted') {\n            let result = await ImagePicker.launchImageLibraryAsync()\n\n            loadImage(result.uri)\n                .then(() => {\n                    console.log(result)\n                    Alert.alert('Success')\n                    setImagePath(result.uri)\n                })\n                .catch((error) => {\n                    Alert.alert(error)\n                })\n        } else {\n            Alert.alert(' PLEASE ALLOW CAMERA ACCESS ')\n        }\n\n    }\n\n    const loadImage = async (uri) => {\n        const metadata = {\n            contentType: 'image/jpeg'\n        };\n        const response = await fetch(uri);\n        const blob = await response.blob();\n\n        const name = new Date().getTime() + '-media.jpg'\n\n        const storage = getStorage();\n        const storRef = storageRef(storage, 'displayPhoto/' + name);\n\n        const uploadTask = uploadBytesResumable(storRef, blob, metadata);\n        uploadTask.on('state_changed',\n            (snapshot) => {\n                // Observe state change events such as progress, pause, and resume\n                // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n                const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                console.log('Upload is ' + progress + '% done');\n                switch (snapshot.state) {\n                    case 'paused':\n                        console.log('Upload is paused');\n                        break;\n                    case 'running':\n                        console.log('Upload is running');\n                        break;\n                }\n            },\n            (error) => {\n                console.log(error)\n            },\n            () => {\n                // Handle successful uploads on complete\n                // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n                getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n                    console.log('File available at', downloadURL);\n                    setDownloadImage(downloadURL)\n                });\n            }\n        );\n\n    }\n\n\n    const handleVerification = async () => {\n\n        const { status } = await Permissions.askAsync(Permissions.CAMERA);\n\n\n        if (status == 'granted') {\n            let result = await ImagePicker.launchCameraAsync()\n\n            _verify(result.uri)\n                .then(() => {\n                    console.log(result)\n                    Alert.alert('Success')\n                })\n                .catch((error) => {\n                    Alert.alert(error)\n                })\n        } else {\n            Alert.alert(' PLEASE ALLOW CAMERA ACCESS ')\n        }\n\n    }\n\n    const _verify = async (uri) => {\n        const metadata = {\n            contentType: 'image/jpeg'\n        };\n        const response = await fetch(uri);\n        const blob = await response.blob();\n\n        const name = new Date().getTime() + '-media.jpg'\n\n        const storage = getStorage();\n        const storRef = storageRef(storage, 'verifyPhoto/' + name);\n\n        const uploadTask = uploadBytesResumable(storRef, blob, metadata);\n        uploadTask.on('state_changed',\n            (snapshot) => {\n                // Observe state change events such as progress, pause, and resume\n                // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n                const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                console.log('Upload is ' + progress + '% done');\n                switch (snapshot.state) {\n                    case 'paused':\n                        console.log('Upload is paused');\n                        break;\n                    case 'running':\n                        console.log('Upload is running');\n                        break;\n                }\n            },\n            (error) => {\n                console.log(error)\n            },\n            () => {\n                // Handle successful uploads on complete\n                // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n                getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n                    console.log('File available at', downloadURL);\n                    setHandleVerify(downloadURL)\n                });\n            }\n        );\n\n    }\n\n    const handleSubmit = () => {\n        try {\n                createUserWithEmailAndPassword(auth, email, password)\n                    .then((user) => {\n                        const cred = user.user\n                        console.log(cred)\n                        updateProfile(auth.currentUser, {\n                            displayName: fullName,\n                            phoneNumber: phoneNumber,\n                            photoURL: downloadImage\n                        }).then(() => {\n                            set(ref(db, 'users/' + cred.uid), {\n                                id: cred.uid,\n                                fullname: cred.displayName,\n                                email: cred.email,\n                                phoneNumber: phoneNumber,\n                                address: signUpAddress,\n                                verify_photo: handleVerify,\n                                display_picture: cred.photoURL,\n                                adminRole: false,\n                                verified: false\n                            });\n                            console.log(cred.photoURL)\n                            Alert.alert('Success')\n                            navigation.navigate('Login')\n                        })\n\n                    })\n\n        } catch {\n            console.log('Failed to Signup')\n        }\n    }\n\n    const Prov = [\"Pampanga\"]\n    const Cit = [\"Minalin\"]\n    const Bar = [\"San Isidro\", \"Sta. Rita\", \"Lourdes\", \"Sta. Maria\"]\n\n    const [country, setCountry] = useState('Unknown');\n\n     \n    return (\n        <View style={{ flex: 1, justifyContent: 'center' }}>\n            <View style={{ width: '85%', alignSelf: 'center' }}>\n                <View\n                    style={{ height: 100, justifyContent: 'center' }}\n                >\n                    <Text\n                        style={{ fontSize: 25, fontWeight: '600', alignSelf: 'center', marginBottom: 5 }}\n                    >\n                        Sign Up\n                    </Text>\n                </View>\n                {\n                    !isShow ? <View>\n                    {\n                                <TouchableOpacity onPress={_upload}>\n                                    {\n                                        imagePath == null ?\n                                            <Image source={{ uri: 'https://cdn1.iconfinder.com/data/icons/rounded-black-basic-ui/139/Photo_Add-RoundedBlack-512.png' }}\n                                                style={{ width: 210, height: 200, alignSelf: 'center', borderRadius: 150 }}\n                                            /> :\n                                            <Image source={{ uri: imagePath }}\n                                                style={{ width: 210, height: 200, alignSelf: 'center', borderRadius: 150 }}\n                                            />\n                                    }\n                                </TouchableOpacity>\n                                \n                            }\n                            <Button style={{ marginBottom: 20 }} onPress={handleVerification}>\n                                Verify\n                            </Button>\n                        <TextInput\n                            style={{ marginTop: 6 }}\n                            label=\"Email\"\n                            value={email}\n                            onChangeText={text => setEmail(text)}\n                        />\n                        <TextInput\n                            style={{ marginTop: 6 }}\n                            label=\"Password\"\n                            value={password}\n                            onChangeText={text => setPassword(text)}\n                            secureTextEntry\n                        />\n                        <TextInput\n                            style={{ marginTop: 6 }}\n                            label=\"Confirm Password\"\n                            value={confirmPassword}\n                            onChangeText={text => setConfirmPassword(text)}\n                            secureTextEntry\n                        />\n\n                        <Button style={{ marginTop: 20, backgroundColor: '#3EB489' }} mode=\"contained\" onPress={() => {\n                              if(email !== null && password !== null && confirmPassword !== null){\n                                if (password === confirmPassword) {\n                                    setIsShow(true)\n                                } else {\n                                    Alert.alert('Password do not match')\n                                }                    \n                            }\n                           \n                                }}>\n                            Next\n                        </Button>\n                        <Button style={{ marginTop: 20 }} mode='outlined' onPress={navigateLogin}>\n                            Login\n                        </Button>\n                    </View>\n                        : null\n                }\n                {\n                    isShow ?\n                        <View>\n                        <View style={{ \n                            flexDirection: 'row',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            color: '#333',\n                            marginBottom: 7}}>\n                        <TextInput\n                            label=\"First Name\"\n                            value={firstName}\n                            onChangeText={text => setFirstName(text)}\n                            style={{width: '50%', marginRight: 6}}\n                        />\n                        <TextInput\n                            label=\"Middle Name\"\n                            value={middleName}\n                            onChangeText={text => setMiddleName(text)}\n                            style={{width: '50%'}}\n                        />\n                        </View>\n                        <View style={{ \n                            flexDirection: 'row',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            color: '#333',}}>\n                        <TextInput\n                            label=\"Last Name\"\n                            value={lastName}\n                            onChangeText={text => setLastName(text)}\n                            style={{width: '100%'}}\n                        />\n                        </View>\n\n                            <TextInput\n                                style={{ marginTop: 6 }}\n                                label=\"Phone Number\"\n                                value={phoneNumber}\n                                onChangeText={text => setPhoneNumber(text)}\n                            />\n                         \n                       <View style={{ \n                            flexDirection: 'row',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            color: '#333',}}\n                            >\n                       <SelectDropdown\n                       defaultButtonText={'Province'}\n                       buttonStyle={{backgroundColor: '#e7e7e7', width: '50%', margin: 2}}\n                            data={Prov}\n                            onSelect={(selectedItem) => {\n                                console.log(selectedItem)\n                                setProvince(selectedItem)\n                            }}\n                            />\n                            <Picker/>\n\n                            <SelectDropdown\n                            defaultButtonText={'City'}\n                            buttonStyle={{backgroundColor: '#e7e7e7', width: '50%', margin: 8}}\n                            data={Cit}\n                            dropdownIconPosition={'right'}\n                            onSelect={(selectedItem) => {\n                                console.log(selectedItem)\n                                setCity(selectedItem)\n                            }}\n                            />       \n                            <Picker/>\n\n                         \n                       </View>\n                        <View style={{ \n                            flexDirection: 'row',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            color: '#333',}}>\n                        <SelectDropdown\n                        defaultButtonText={'Barangay'}\n                        buttonStyle={{backgroundColor: '#e7e7e7', width: '100%'}}\n                            data={Bar}\n                            onSelect={(selectedItem) => {\n                                console.log(selectedItem)\n                                setBarangay(selectedItem)\n                            }}\n                            />\n                        <Picker/>\n                         </View>\n                            <Button style={{ marginTop: 20, backgroundColor: '#3EB489' }} mode=\"contained\" onPress={handleSubmit}>\n                                SignUp\n                            </Button>\n                            <Button style={{ marginTop: 20  }} mode='outlined' onPress={() => setIsShow(false)}>\n                                Back\n                            </Button>\n                        </View>\n                        : null\n\n                }\n\n\n\n            </View>\n        </View>\n    );\n};\n\nexport default SignUp;\n\n"]},"metadata":{},"sourceType":"module"}