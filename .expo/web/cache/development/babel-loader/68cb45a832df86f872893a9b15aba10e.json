{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { auth, db } from \"../firebase\";\nimport { ref, set, push, onValue } from 'firebase/database';\n\nvar Header = function Header(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isVerified = _useState2[0],\n      setIsVerified = _useState2[1];\n\n  useEffect(function () {\n    var dbRef = ref(db, 'users/');\n    onValue(dbRef, function (snap) {\n      var users = [];\n      snap.forEach(function (item) {\n        var data = item.val();\n\n        if (auth.currentUser.uid == data.id) {\n          users.push(data);\n          console.log(data.verified);\n          setIsVerified(data.verified);\n        }\n      });\n    });\n  }, []);\n\n  var openMenu = function openMenu() {\n    navigation.openDrawer();\n  };\n\n  return React.createElement(View, {\n    style: styles.header\n  }, isVerified ? React.createElement(MaterialIcons, {\n    name: \"menu\",\n    size: 28,\n    style: styles.icon,\n    onPress: openMenu\n  }) : null, React.createElement(View, null, React.createElement(Text, {\n    style: styles.headerText\n  }, \"C . A . R. E\")));\n};\n\nexport default Header;\nvar styles = StyleSheet.create({\n  header: {\n    width: '100%',\n    height: '100%',\n    flexDirection: 'row-reverse',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  headerText: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    color: '#333',\n    letterSpacing: 1\n  },\n  icon: {\n    position: 'absolute',\n    left: 16\n  }\n});","map":{"version":3,"sources":["C:/Users/Kid/Desktop/care-mob/components/shared/header.js"],"names":["React","useEffect","useState","MaterialIcons","auth","db","ref","set","push","onValue","Header","navigation","isVerified","setIsVerified","dbRef","snap","users","forEach","item","data","val","currentUser","uid","id","console","log","verified","openMenu","openDrawer","styles","header","icon","headerText","StyleSheet","create","width","height","flexDirection","alignItems","justifyContent","fontWeight","fontSize","color","letterSpacing","position","left"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;;;;AAEA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,IAAT,EAAeC,EAAf;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,OAAzB,QAAwC,mBAAxC;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAE/B,kBAAqCT,QAAQ,CAAC,IAAD,CAA7C;AAAA;AAAA,MAAQU,UAAR;AAAA,MAAoBC,aAApB;;AAEAZ,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMa,KAAK,GAAGR,GAAG,CAACD,EAAD,EAAK,QAAL,CAAjB;AACAI,IAAAA,OAAO,CAACK,KAAD,EAAQ,UAACC,IAAD,EAAU;AACf,UAAMC,KAAK,GAAG,EAAd;AACAD,MAAAA,IAAI,CAACE,OAAL,CAAa,UAAAC,IAAI,EAAI;AACjB,YAAMC,IAAI,GAAGD,IAAI,CAACE,GAAL,EAAb;;AACA,YAAGhB,IAAI,CAACiB,WAAL,CAAiBC,GAAjB,IAAwBH,IAAI,CAACI,EAAhC,EAAmC;AAC/BP,UAAAA,KAAK,CAACR,IAAN,CAAWW,IAAX;AACAK,UAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACO,QAAjB;AACAb,UAAAA,aAAa,CAACM,IAAI,CAACO,QAAN,CAAb;AACH;AACJ,OAPD;AAUP,KAZI,CAAP;AAaH,GAfQ,EAeN,EAfM,CAAT;;AAiBA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnBhB,IAAAA,UAAU,CAACiB,UAAX;AACH,GAFD;;AAGA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,KAEQlB,UAAU,GACV,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAC,MAApB;AAA2B,IAAA,IAAI,EAAE,EAAjC;AAAqC,IAAA,KAAK,EAAEiB,MAAM,CAACE,IAAnD;AAAyD,IAAA,OAAO,EAAEJ;AAAlE,IADU,GAER,IAJV,EAMI,oBAAC,IAAD,QACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACG;AAApB,oBADJ,CANJ,CADJ;AAYH,CApCD;;AAsCA,eAAetB,MAAf;AAEA,IAAMmB,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,MAAM,EAAE;AACJK,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,MAAM,EAAE,MAFJ;AAGJC,IAAAA,aAAa,EAAE,aAHX;AAIJC,IAAAA,UAAU,EAAE,QAJR;AAKJC,IAAAA,cAAc,EAAE;AALZ,GADqB;AAS7BP,EAAAA,UAAU,EAAE;AACRQ,IAAAA,UAAU,EAAE,MADJ;AAERC,IAAAA,QAAQ,EAAE,EAFF;AAGRC,IAAAA,KAAK,EAAE,MAHC;AAIRC,IAAAA,aAAa,EAAE;AAJP,GATiB;AAgB7BZ,EAAAA,IAAI,EAAE;AACFa,IAAAA,QAAQ,EAAE,UADR;AAEFC,IAAAA,IAAI,EAAE;AAFJ;AAhBuB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState} from 'react'\nimport { StyleSheet, Text, View } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { auth, db } from '../firebase';\nimport { ref, set, push, onValue } from 'firebase/database';\n\nconst Header = ({ navigation }) => {\n\n    const [ isVerified, setIsVerified] = useState(true)\n\n    useEffect(() => {\n        const dbRef = ref(db, 'users/');\n        onValue(dbRef, (snap) => {\n                  const users = []\n                  snap.forEach(item => {\n                      const data = item.val()\n                      if(auth.currentUser.uid == data.id){\n                          users.push(data)\n                          console.log(data.verified)\n                          setIsVerified(data.verified)\n                      }\n                  })\n                  \n  \n          });\n    }, [])\n\n    const openMenu = () => {\n        navigation.openDrawer();\n    }\n    return (\n        <View style={styles.header}>\n            {\n                isVerified ? \n                <MaterialIcons name='menu' size={28} style={styles.icon} onPress={openMenu} />\n                : null\n            }\n            <View>\n                <Text style={styles.headerText}>C . A . R. E</Text>\n            </View>\n        </View>\n    )\n}\n\nexport default Header\n\nconst styles = StyleSheet.create({\n    header: {\n        width: '100%',\n        height: '100%',\n        flexDirection: 'row-reverse',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    headerText: {\n        fontWeight: 'bold',\n        fontSize: 20,\n        color: '#333',\n        letterSpacing: 1\n    },\n\n    icon: {\n        position: 'absolute',\n        left: 16\n    }\n})\n"]},"metadata":{},"sourceType":"module"}