{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport shorthash from 'short-hash';\nimport { FileSystem } from 'expo';\n\nvar Cache = function (_Component) {\n  _inherits(Cache, _Component);\n\n  var _super = _createSuper(Cache);\n\n  function Cache() {\n    var _this;\n\n    _classCallCheck(this, Cache);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      source: null\n    };\n\n    _this.componentDidMount = function _callee() {\n      var uri, name, path, image, newImage;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              uri = _this.props.uri;\n              name = shorthash.unique(uri);\n              console.log(name);\n              path = \"\" + FileSystem.cacheDirectory + name;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(FileSystem.getInfoAsync(path));\n\n            case 6:\n              image = _context.sent;\n\n              if (!image.exists) {\n                _context.next = 11;\n                break;\n              }\n\n              console.log('read image from cache');\n\n              _this.setState({\n                source: {\n                  uri: image.uri\n                }\n              });\n\n              return _context.abrupt(\"return\");\n\n            case 11:\n              console.log('downloading image to cache');\n              _context.next = 14;\n              return _regeneratorRuntime.awrap(FileSystem.downloadAsync(uri, path));\n\n            case 14:\n              newImage = _context.sent;\n\n              _this.setState({\n                source: {\n                  uri: newImage.uri\n                }\n              });\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(Cache, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(Image, {\n        source: this.state.source\n      }));\n    }\n  }]);\n\n  return Cache;\n}(Component);\n\nexport { Cache as default };","map":{"version":3,"sources":["C:/Users/Kid/Desktop/care-mob/components/Cache/index.js"],"names":["React","Component","shorthash","FileSystem","Cache","state","source","componentDidMount","uri","props","name","unique","console","log","path","cacheDirectory","getInfoAsync","image","exists","setState","downloadAsync","newImage"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,MAA3B;;IAEqBC,K;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACJC,MAAAA,MAAM,EAAE;AADJ,K;;UAIRC,iB,GAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AACTC,cAAAA,GADS,GACF,MAAKC,KADH,CACTD,GADS;AAEVE,cAAAA,IAFU,GAEHR,SAAS,CAACS,MAAV,CAAiBH,GAAjB,CAFG;AAGhBI,cAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACMI,cAAAA,IAJU,QAIAX,UAAU,CAACY,cAJX,GAI4BL,IAJ5B;AAAA;AAAA,+CAKIP,UAAU,CAACa,YAAX,CAAwBF,IAAxB,CALJ;;AAAA;AAKVG,cAAAA,KALU;;AAAA,mBAMZA,KAAK,CAACC,MANM;AAAA;AAAA;AAAA;;AAOZN,cAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;;AACA,oBAAKM,QAAL,CAAc;AACVb,gBAAAA,MAAM,EAAE;AACJE,kBAAAA,GAAG,EAAES,KAAK,CAACT;AADP;AADE,eAAd;;AARY;;AAAA;AAehBI,cAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AAfgB;AAAA,+CAgBOV,UAAU,CAACiB,aAAX,CAAyBZ,GAAzB,EAA8BM,IAA9B,CAhBP;;AAAA;AAgBVO,cAAAA,QAhBU;;AAiBhB,oBAAKF,QAAL,CAAc;AACVb,gBAAAA,MAAM,EAAE;AACJE,kBAAAA,GAAG,EAAEa,QAAQ,CAACb;AADV;AADE,eAAd;;AAjBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;WAwBlB,kBAAS;AAEL,aACF,0CACC,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,KAAKH,KAAL,CAAWC;AAA1B,QADD,CADE;AAKL;;;;EApCgCL,S;;SAAdG,K","sourcesContent":["import React, { Component } from 'react';\r\nimport { Image } from 'react-native';\r\nimport shorthash from 'short-hash';\r\nimport { FileSystem } from 'expo';\r\n\r\nexport default class Cache extends Component {\r\n  state = {\r\n      source: null\r\n  }\r\n  \r\n  componentDidMount = async () => {\r\n      const {uri} = this.props;\r\n      const name = shorthash.unique(uri);\r\n      console.log(name)\r\n      const path = `${FileSystem.cacheDirectory}${name}`;\r\n      const image = await FileSystem.getInfoAsync(path);\r\n      if (image.exists){\r\n          console.log('read image from cache')\r\n          this.setState({\r\n              source: {\r\n                  uri: image.uri,\r\n              }\r\n          })\r\n          return;\r\n      }\r\n      console.log('downloading image to cache')\r\n      const newImage = await FileSystem.downloadAsync(uri, path);\r\n      this.setState({\r\n          source: {\r\n              uri: newImage.uri,\r\n          }\r\n      })\r\n  }\r\n\r\n    render() {\r\n   \r\n        return (\r\n      <>\r\n       <Image source={this.state.source}/> \r\n      </>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}