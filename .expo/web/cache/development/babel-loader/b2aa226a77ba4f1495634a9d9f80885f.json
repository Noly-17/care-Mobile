{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _polylineDecode = _interopRequireDefault(require(\"./polyline-decode\"));\n\nvar getDirectionsRequest = function getDirectionsRequest(apiKey, apiDirectionsServiceURL, origin, waypoints, destination, mode, language, region) {\n  var url = apiDirectionsServiceURL;\n\n  if (typeof apiDirectionsServiceURL === 'string') {\n    url += \"?origin=\" + origin + \"&waypoints=\" + waypoints + \"&destination=\" + destination + \"&key=\" + apiKey + \"&mode=\" + mode + \"&language=\" + language + \"&region=\" + region + \"&departure_time=now\";\n  }\n\n  return fetch(url).then(function (response) {\n    return response.json();\n  }).then(function (json) {\n    if (json.status !== 'OK') {\n      var errorMessage = json.error_message || 'Unknown error';\n      return Promise.reject(errorMessage);\n    }\n\n    if (json.routes.length) {\n      var route = json.routes[0];\n      return Promise.resolve({\n        distance: route.legs.reduce(function (carry, curr) {\n          return carry + curr.distance.value;\n        }, 0) / 1000,\n        duration: route.legs.reduce(function (carry, curr) {\n          return carry + curr.duration_in_traffic ? curr.duration_in_traffic.value : curr.duration.value;\n        }, 0) / 60,\n        coordinates: (0, _polylineDecode.default)(route.overview_polyline.points),\n        fare: route.fare\n      });\n    } else {\n      return Promise.reject();\n    }\n  }).catch(function (err) {\n    console.warn('PolylineDirection Error on GoogleMAPS route request', err);\n  });\n};\n\nvar _default = getDirectionsRequest;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Kid/Desktop/care-mob/node_modules/@react-native-maps/polyline-direction/lib/utils/get-directions-request.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_polylineDecode","getDirectionsRequest","apiKey","apiDirectionsServiceURL","origin","waypoints","destination","mode","language","region","url","fetch","then","response","json","status","errorMessage","error_message","Promise","reject","routes","length","route","resolve","distance","legs","reduce","carry","curr","duration","duration_in_traffic","coordinates","overview_polyline","points","fare","catch","err","console","warn","_default"],"mappings":"AAAA,IAAIA,sBAAsB,GAACC,OAAO,CAAC,8CAAD,CAAlC;;AAAmFC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA8B,YAA9B,EAA2C;AAACC,EAAAA,KAAK,EAAC;AAAP,CAA3C;AAAyDD,OAAO,CAACE,OAAR,GAAgB,KAAK,CAArB;;AAAuB,IAAIC,eAAe,GAACP,sBAAsB,CAACC,OAAO,qBAAR,CAA1C;;AAAyE,IAAIO,oBAAoB,GAAC,SAASA,oBAAT,CAA8BC,MAA9B,EAAqCC,uBAArC,EAA6DC,MAA7D,EAAoEC,SAApE,EAA8EC,WAA9E,EAA0FC,IAA1F,EAA+FC,QAA/F,EAAwGC,MAAxG,EAA+G;AAAC,MAAIC,GAAG,GAACP,uBAAR;;AAAgC,MAAG,OAAOA,uBAAP,KAAiC,QAApC,EAA6C;AAACO,IAAAA,GAAG,IAAE,aAAWN,MAAX,GAAkB,aAAlB,GAAgCC,SAAhC,GAA0C,eAA1C,GAA0DC,WAA1D,GAAsE,OAAtE,GAA8EJ,MAA9E,GAAqF,QAArF,GAA8FK,IAA9F,GAAmG,YAAnG,GAAgHC,QAAhH,GAAyH,UAAzH,GAAoIC,MAApI,GAA2I,qBAAhJ;AAAuK;;AAAA,SAAOE,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAASC,QAAT,EAAkB;AAAC,WAAOA,QAAQ,CAACC,IAAT,EAAP;AAAwB,GAA3D,EAA6DF,IAA7D,CAAkE,UAASE,IAAT,EAAc;AAAC,QAAGA,IAAI,CAACC,MAAL,KAAc,IAAjB,EAAsB;AAAC,UAAIC,YAAY,GAACF,IAAI,CAACG,aAAL,IAAoB,eAArC;AAAqD,aAAOC,OAAO,CAACC,MAAR,CAAeH,YAAf,CAAP;AAAqC;;AAAA,QAAGF,IAAI,CAACM,MAAL,CAAYC,MAAf,EAAsB;AAAC,UAAIC,KAAK,GAACR,IAAI,CAACM,MAAL,CAAY,CAAZ,CAAV;AAAyB,aAAOF,OAAO,CAACK,OAAR,CAAgB;AAACC,QAAAA,QAAQ,EAACF,KAAK,CAACG,IAAN,CAAWC,MAAX,CAAkB,UAASC,KAAT,EAAeC,IAAf,EAAoB;AAAC,iBAAOD,KAAK,GAACC,IAAI,CAACJ,QAAL,CAAc1B,KAA3B;AAAkC,SAAzE,EAA0E,CAA1E,IAA6E,IAAvF;AAA4F+B,QAAAA,QAAQ,EAACP,KAAK,CAACG,IAAN,CAAWC,MAAX,CAAkB,UAASC,KAAT,EAAeC,IAAf,EAAoB;AAAC,iBAAOD,KAAK,GAACC,IAAI,CAACE,mBAAX,GAA+BF,IAAI,CAACE,mBAAL,CAAyBhC,KAAxD,GAA8D8B,IAAI,CAACC,QAAL,CAAc/B,KAAnF;AAA0F,SAAjI,EAAkI,CAAlI,IAAqI,EAA1O;AAA6OiC,QAAAA,WAAW,EAAC,CAAC,GAAE/B,eAAe,CAACD,OAAnB,EAA4BuB,KAAK,CAACU,iBAAN,CAAwBC,MAApD,CAAzP;AAAqTC,QAAAA,IAAI,EAACZ,KAAK,CAACY;AAAhU,OAAhB,CAAP;AAA+V,KAA/Y,MAAmZ;AAAC,aAAOhB,OAAO,CAACC,MAAR,EAAP;AAAyB;AAAC,GAAhnB,EAAknBgB,KAAlnB,CAAwnB,UAASC,GAAT,EAAa;AAACC,IAAAA,OAAO,CAACC,IAAR,CAAa,qDAAb,EAAmEF,GAAnE;AAAyE,GAA/sB,CAAP;AAAytB,CAAvlC;;AAAwlC,IAAIG,QAAQ,GAACtC,oBAAb;AAAkCJ,OAAO,CAACE,OAAR,GAAgBwC,QAAhB","sourcesContent":["var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _polylineDecode=_interopRequireDefault(require(\"./polyline-decode\"));var getDirectionsRequest=function getDirectionsRequest(apiKey,apiDirectionsServiceURL,origin,waypoints,destination,mode,language,region){var url=apiDirectionsServiceURL;if(typeof apiDirectionsServiceURL==='string'){url+=\"?origin=\"+origin+\"&waypoints=\"+waypoints+\"&destination=\"+destination+\"&key=\"+apiKey+\"&mode=\"+mode+\"&language=\"+language+\"&region=\"+region+\"&departure_time=now\";}return fetch(url).then(function(response){return response.json();}).then(function(json){if(json.status!=='OK'){var errorMessage=json.error_message||'Unknown error';return Promise.reject(errorMessage);}if(json.routes.length){var route=json.routes[0];return Promise.resolve({distance:route.legs.reduce(function(carry,curr){return carry+curr.distance.value;},0)/1000,duration:route.legs.reduce(function(carry,curr){return carry+curr.duration_in_traffic?curr.duration_in_traffic.value:curr.duration.value;},0)/60,coordinates:(0,_polylineDecode.default)(route.overview_polyline.points),fare:route.fare});}else{return Promise.reject();}}).catch(function(err){console.warn('PolylineDirection Error on GoogleMAPS route request',err);});};var _default=getDirectionsRequest;exports.default=_default;"]},"metadata":{},"sourceType":"script"}