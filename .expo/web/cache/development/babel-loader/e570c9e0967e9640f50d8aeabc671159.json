{"ast":null,"code":"import AsyncStorage from \"@react-native-async-storage/async-storage\";\nexport var findEmailAsync = function findEmailAsync(setEmail) {\n  AsyncStorage.getItem('email').then(function (value) {\n    return setEmail(value);\n  }).catch(function (error) {\n    return console.log(error);\n  });\n};\nexport var findPasswordAsync = function findPasswordAsync(setPassword) {\n  AsyncStorage.getItem('password').then(function (value) {\n    return setPassword(value);\n  }).catch(function (error) {\n    return console.log(error);\n  });\n};\nexport var storeInAsyncStorage = function storeInAsyncStorage(key, value) {\n  AsyncStorage.setItem(key, value);\n};","map":{"version":3,"sources":["C:/Users/Kid/Desktop/care-mob/components/storage/index.tsx"],"names":["AsyncStorage","findEmailAsync","setEmail","getItem","then","value","catch","error","console","log","findPasswordAsync","setPassword","storeInAsyncStorage","key","setItem"],"mappings":"AAAA,OAAQA,YAAR,MAA0B,2CAA1B;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,QAAD,EAAmB;AAC7CF,EAAAA,YAAY,CAACG,OAAb,CAAqB,OAArB,EACCC,IADD,CACM,UAACC,KAAD;AAAA,WAAUH,QAAQ,CAACG,KAAD,CAAlB;AAAA,GADN,EAECC,KAFD,CAEO,UAACC,KAAD;AAAA,WAAUC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAV;AAAA,GAFP;AAGH,CAJM;AAMP,OAAO,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,WAAD,EAAsB;AACnDX,EAAAA,YAAY,CAACG,OAAb,CAAqB,UAArB,EACCC,IADD,CACM,UAACC,KAAD;AAAA,WAAUM,WAAW,CAACN,KAAD,CAArB;AAAA,GADN,EAECC,KAFD,CAEO,UAACC,KAAD;AAAA,WAAUC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAV;AAAA,GAFP;AAGH,CAJM;AAMP,OAAO,IAAMK,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,GAAD,EAAcR,KAAd,EAA6B;AAC5DL,EAAAA,YAAY,CAACc,OAAb,CAAqBD,GAArB,EAA0BR,KAA1B;AACH,CAFM","sourcesContent":["import  AsyncStorage from \"@react-native-async-storage/async-storage\"\r\n\r\nexport const findEmailAsync = (setEmail: any) => {\r\n    AsyncStorage.getItem('email')\r\n    .then((value)=> setEmail(value))\r\n    .catch((error)=> console.log(error))\r\n}\r\n\r\nexport const findPasswordAsync = (setPassword: any) => {\r\n    AsyncStorage.getItem('password')\r\n    .then((value)=> setPassword(value))\r\n    .catch((error)=> console.log(error))\r\n}\r\n\r\nexport const storeInAsyncStorage = (key: string, value: any) => {\r\n    AsyncStorage.setItem(key, value)\r\n}"]},"metadata":{},"sourceType":"module"}