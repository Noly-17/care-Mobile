{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Button } from 'react-native-paper';\nimport { auth, db } from \"../../firebase\";\nimport { ref, set, push, onValue } from 'firebase/database';\n\nvar Home = function Home(_ref) {\n  var navigation = _ref.navigation,\n      lockDrawer = _ref.lockDrawer;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isVerified = _useState2[0],\n      setIsVerified = _useState2[1];\n\n  useEffect(function () {\n    var dbRef = ref(db, 'users/');\n    onValue(dbRef, function (snap) {\n      var users = [];\n      snap.forEach(function (item) {\n        var data = item.val();\n\n        if (auth.currentUser.uid == data.id) {\n          users.push(data);\n          console.log(data.verified);\n          setIsVerified(data.verified);\n        }\n      });\n    });\n  }, []);\n\n  var handleVerify = function handleVerify() {\n    var _await$Permissions$as, status, result;\n\n    return _regeneratorRuntime.async(function handleVerify$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n          case 2:\n            _await$Permissions$as = _context.sent;\n            status = _await$Permissions$as.status;\n\n            if (!(status == 'granted')) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync());\n\n          case 7:\n            result = _context.sent;\n\n            _verify(result.uri).then(function () {\n              console.log(result);\n              Alert.alert('Success');\n            }).catch(function (error) {\n              Alert.alert(error);\n            });\n\n            _context.next = 12;\n            break;\n\n          case 11:\n            Alert.alert(' PLEASE ALLOW CAMERA ACCESS ');\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _verify = function _verify(uri) {\n    var metadata, response, blob, name, storage, storRef, uploadTask;\n    return _regeneratorRuntime.async(function _verify$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            metadata = {\n              contentType: 'image/jpeg'\n            };\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 3:\n            response = _context2.sent;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 6:\n            blob = _context2.sent;\n            name = new Date().getTime() + '-media.jpg';\n            storage = getStorage();\n            storRef = storageRef(storage, 'verifyPhoto/' + name);\n            uploadTask = uploadBytesResumable(storRef, blob, metadata);\n            uploadTask.on('state_changed', function (snapshot) {\n              var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n              console.log('Upload is ' + progress + '% done');\n\n              switch (snapshot.state) {\n                case 'paused':\n                  console.log('Upload is paused');\n                  break;\n\n                case 'running':\n                  console.log('Upload is running');\n                  break;\n              }\n            }, function (error) {\n              console.log(error);\n            }, function () {\n              getDownloadURL(uploadTask.snapshot.ref).then(function (downloadURL) {\n                console.log('File available at', downloadURL);\n                setHandleVerify(downloadURL);\n              });\n            });\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleSubmit = function handleSubmit() {\n    try {\n      auth.signOut().then(function () {\n        navigation.push('Login');\n      });\n    } catch (_unused) {\n      console.log('Failed to Login');\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Image, {\n    source: require(\"../../../assets/logo.png\"),\n    style: styles.image\n  }), isVerified ? React.createElement(View, {\n    style: styles.text\n  }, React.createElement(Button, {\n    mode: \"contained\",\n    onPress: function onPress() {\n      return navigation.navigate('Emergency');\n    },\n    style: styles.button\n  }, \"Send Emergency\")) : React.createElement(View, {\n    style: styles.text\n  }, React.createElement(Text, null, \"Please \\\"Verify\\\" your account first\"), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: handleVerify,\n    style: styles.button\n  }, \"Verify your account\"), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: handleSubmit,\n    style: styles.buttonlg\n  }, \"Logout\")));\n};\n\nexport default Home;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  buttonlg: {\n    marginTop: 5\n  },\n  button: {\n    backgroundColor: '#3EB489'\n  },\n  text: {\n    alignSelf: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    bottom: '26%'\n  },\n  image: {\n    alignSelf: 'center',\n    width: 300,\n    height: 300,\n    position: 'relative',\n    top: '18%'\n  }\n});","map":{"version":3,"sources":["C:/Users/Kid/Desktop/care-mob/components/screens/HomeScreen/index.js"],"names":["React","useState","useEffect","Button","auth","db","ref","set","push","onValue","Home","navigation","lockDrawer","isVerified","setIsVerified","dbRef","snap","users","forEach","item","data","val","currentUser","uid","id","console","log","verified","handleVerify","Permissions","askAsync","CAMERA","status","ImagePicker","launchCameraAsync","result","_verify","uri","then","Alert","alert","catch","error","metadata","contentType","fetch","response","blob","name","Date","getTime","storage","getStorage","storRef","storageRef","uploadTask","uploadBytesResumable","on","snapshot","progress","bytesTransferred","totalBytes","state","getDownloadURL","downloadURL","setHandleVerify","handleSubmit","signOut","styles","container","require","image","text","navigate","button","buttonlg","StyleSheet","create","flex","marginTop","backgroundColor","alignSelf","justifyContent","position","bottom","width","height","top"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, Image } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { auth, db } from '../../firebase';\nimport { ref, set, push, onValue } from 'firebase/database';\n\n\nconst Home = ({ navigation, lockDrawer }) => {\n    const [isVerified, setIsVerified] = useState(true)\n\n    useEffect(() => {\n        const dbRef = ref(db, 'users/');\n        onValue(dbRef, (snap) => {\n                  const users = []\n                  snap.forEach(item => {\n                      const data = item.val()\n                      if(auth.currentUser.uid == data.id){\n                          users.push(data)\n                          console.log(data.verified)\n                          setIsVerified(data.verified)\n                      }\n                  })\n                  \n  \n          });\n    }, [])\n\n\n   \n    const handleVerify = async () => {\n\n        const { status } = await Permissions.askAsync(Permissions.CAMERA);\n\n\n        if (status == 'granted') {\n            let result = await ImagePicker.launchCameraAsync()\n\n            _verify(result.uri)\n                .then(() => {\n                    console.log(result)\n                    Alert.alert('Success')\n                })\n                .catch((error) => {\n                    Alert.alert(error)\n                })\n        } else {\n            Alert.alert(' PLEASE ALLOW CAMERA ACCESS ')\n        }\n\n    }\n\n    const _verify = async (uri) => {\n        const metadata = {\n            contentType: 'image/jpeg'\n        };\n        const response = await fetch(uri);\n        const blob = await response.blob();\n\n        const name = new Date().getTime() + '-media.jpg'\n\n        const storage = getStorage();\n        const storRef = storageRef(storage, 'verifyPhoto/' + name);\n\n        const uploadTask = uploadBytesResumable(storRef, blob, metadata);\n        uploadTask.on('state_changed',\n            (snapshot) => {\n                // Observe state change events such as progress, pause, and resume\n                // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n                const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                console.log('Upload is ' + progress + '% done');\n                switch (snapshot.state) {\n                    case 'paused':\n                        console.log('Upload is paused');\n                        break;\n                    case 'running':\n                        console.log('Upload is running');\n                        break;\n                }\n            },\n            (error) => {\n                console.log(error)\n            },\n            () => {\n                // Handle successful uploads on complete\n                // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n                getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n                    console.log('File available at', downloadURL);\n                    setHandleVerify(downloadURL)\n                });\n            }\n        );\n\n    }\n\n    const handleSubmit = () => {\n \n        try {\n            auth\n                .signOut()\n                .then(() => {\n                    navigation.push('Login')\n                }\n                );\n\n        } catch {\n            console.log('Failed to Login')\n        }\n    }\n\n\n    return (\n        <View style={styles.container}>\n            <Image\n                source={require('../../../assets/logo.png')}\n                style={styles.image}\n            />\n            {\n            isVerified ? \n            <View style={styles.text}>  \n            <Button mode='contained' onPress={() => navigation.navigate('Emergency')} style={styles.button}>\n                Send Emergency\n            </Button>\n            </View>\n            :\n            <View style={styles.text}>  \n            <Text>Please \"Verify\" your account first</Text>\n            <Button mode='contained' onPress={handleVerify} style={styles.button}>\n                Verify your account\n            </Button>\n            <Button mode='contained' onPress={handleSubmit} style={styles.buttonlg}>\n                Logout\n            </Button>\n            </View>\n            }\n        </View>\n    )\n}\n\n\nexport default Home;\n\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    buttonlg: {\n        marginTop: 5\n    },\n    button: {\n        backgroundColor: '#3EB489'\n    },\n    text: {\n        alignSelf: 'center',\n        justifyContent: 'center',\n        position: 'absolute',\n        bottom: '26%',\n     },\n    image: {\n        alignSelf: 'center',\n        width: 300,\n        height: 300,\n        position: 'relative',\n        top: '18%',\n     }\n})"]},"metadata":{},"sourceType":"module"}